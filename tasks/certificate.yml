---
  - name: Check if node certificate exists
    stat:
      path: "{{ workdir }}/pki/issued/{{ ansible_nodename }}-{{ local_ca_instance.cn }}.crt"
    register: ccrt
    changed_when: False
    delegate_to: "{{ local_ca_workhost }}"

  - name: Generate certificate request for this node
    command: >
      ./easyrsa
      --batch
      --req-cn="{{ local_ca_instance.cn }}"
      gen-req "{{ ansible_nodename }}-{{ local_ca_instance.cn }}"
      nopass
    args:
      chdir: "{{ workdir }}"
    when: (not ccrt.stat.exists) and (local_ca_instance.san is undefined)
    delegate_to: "{{ local_ca_workhost }}"

  - name: Generate certificate request for this node (SAN)
    command: >
      ./easyrsa
      --batch
      --req-cn="{{ local_ca_instance.cn }}"
      --subject-alt-name="{{ local_ca_instance.san }}"
      gen-req "{{ ansible_nodename }}-{{ local_ca_instance.cn }}"
      nopass
    args:
      chdir: "{{ workdir }}"
    when: (not ccrt.stat.exists) and (local_ca_instance.san is defined)
    delegate_to: "{{ local_ca_workhost }}"

  - name: Sign certificate for this node
    command: >
      ./easyrsa
      --batch
      sign-req {{ local_ca_type }} "{{ ansible_nodename }}-{{ local_ca_instance.cn }}"
      nopass
    args:
      chdir: "{{ workdir }}"
    when: (not ccrt.stat.exists) and (local_ca_instance.san is undefined)
    delegate_to: "{{ local_ca_workhost }}"

  - name: Sign certificate for this node (SAN)
    command: >
      ./easyrsa
      --batch
      --subject-alt-name="{{ local_ca_instance.san }}"
      sign-req {{ local_ca_type }} "{{ ansible_nodename }}-{{ local_ca_instance.cn}}"
      nopass
    args:
      chdir: "{{ workdir }}"
    when: (not ccrt.stat.exists) and (local_ca_instance.san is defined)
    delegate_to: "{{ local_ca_workhost }}"

  - import_tasks: copy_single.yml
    when: local_ca_instance.key is defined
    vars:
      name: PEM Key
      src: "{{ workdir }}/pki/private/{{ ansible_nodename }}-{{ local_ca_instance.cn }}.key"
      dest: "{{ local_ca_instance.key }}"
      tmpname: "{{ ansible_nodename }}-{{ local_ca_instance.cn }}.key"

  - import_tasks: copy_single.yml
    when: local_ca_instance.cert is defined
    vars:
      name: PEM Certificate
      src: "{{ workdir }}/pki/issued/{{ ansible_nodename }}-{{ local_ca_instance.cn }}.crt"
      dest: "{{ local_ca_instance.cert }}"
      tmpname: "{{ ansible_nodename }}-{{ local_ca_instance.cn }}.crt"

