---
  - name: Check if node dual certificate exists
    stat: path="{{ workdir }}/pki/issued/{{ansible_nodename}}-{{ both.cn }}.crt"
    register: ccrt
    changed_when: False
    delegate_to: "{{ local_ca_workhost }}"

  - name: Generate dual certificate request for this node
    command: ./easyrsa --batch --req-cn="{{both.cn}}" gen-req "{{ansible_nodename}}-{{both.cn}}" nopass chdir="{{ workdir }}"
    when: (not ccrt.stat.exists) and (both.san is undefined)
    delegate_to: "{{ local_ca_workhost }}"

  - name: Generate dual certificate request for this node (SAN)
    command: ./easyrsa --batch --req-cn="{{both.cn}}" --subject-alt-name="{{both.san}}" gen-req "{{ansible_nodename}}-{{both.cn}}" nopass chdir="{{ workdir }}"
    when: (not ccrt.stat.exists) and (both.san is defined)
    delegate_to: "{{ local_ca_workhost }}"

  - name: Sign dual certificate for this node
    command: ./easyrsa --batch sign-req both "{{ansible_nodename}}-{{both.cn}}" nopass chdir="{{ workdir }}"
    when: not ccrt.stat.exists and (both.san is undefined)
    delegate_to: "{{ local_ca_workhost }}"

  - name: Sign dual certificate for this node (SAN)
    command: ./easyrsa --batch --subject-alt-name="{{both.san}}" sign-req both "{{ansible_nodename}}-{{both.cn}}" nopass chdir="{{ workdir }}"
    when: not ccrt.stat.exists and (both.san is defined)
    delegate_to: "{{ local_ca_workhost }}"

  - import_tasks: copy.yml
    vars:
      name: "Dual"
      cert: "{{ both }}"
